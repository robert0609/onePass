{"version":3,"file":"index.5bce3228.js","sources":["../../src/pages/site/list/index.tsx"],"sourcesContent":["import { defineComponent, onMounted, ref } from 'vue';\nimport LayoutMain from '@/components/layoutMain';\nimport OneTable from '@/components/table';\nimport { siteListController } from '@/core/business/site';\nimport { ElMessage, ElLoading, ILoadingInstance } from 'element-plus';\nimport { useRoute, onBeforeRouteUpdate, useRouter } from 'vue-router';\nimport { Site } from '@/api';\nimport SiteEdit from '@/pages/site/edit';\n\nexport default defineComponent({\n  name: 'SiteList',\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    let loadingInstance: ILoadingInstance | undefined;\n    const showEditApp = ref<boolean>(false);\n\n    const {\n      level,\n      siteList,\n      pageSize,\n      currentPageIndex,\n      totalCount,\n      fetchSiteList\n    } = siteListController();\n\n    const selectedSiteId = ref<number>(0);\n\n    onMounted(() => {\n      level.value = route.query.level as string;\n      loadSiteList();\n    });\n\n    onBeforeRouteUpdate((to, from, next) => {\n      level.value = to.query.level as string;\n      loadSiteList();\n      next();\n    });\n\n    function loadSiteList() {\n      loadingInstance = ElLoading.service({\n        target: '#site-table'\n      });\n      fetchSiteList()\n        .catch((e) => {\n          ElMessage.error(e.message);\n        })\n        .finally(() => {\n          if (loadingInstance) {\n            loadingInstance.close();\n          }\n        });\n    }\n\n    function onClickAccountList(row: Site) {\n      router.push({\n        name: 'accountList',\n        query: {\n          site_id: row.id\n        }\n      });\n    }\n\n    function onClickEditApp(row?: Site) {\n      if (row) {\n        selectedSiteId.value = row.id;\n      } else {\n        selectedSiteId.value = 0;\n      }\n      showEditApp.value = true;\n    }\n\n    function onDrawConfirm() {\n      showEditApp.value = false;\n      loadSiteList();\n    }\n\n    return () => (\n      <>\n        <LayoutMain>\n          <div class=\"flex justify-end\">\n            <ElButton\n              icon=\"ElIconPlus\"\n              type=\"primary\"\n              onClick={() => onClickEditApp()}\n            >\n              新增应用\n            </ElButton>\n          </div>\n          <OneTable\n            data={siteList.value}\n            pageSize={pageSize.value}\n            currentPageIndex={currentPageIndex.value}\n            totalCount={totalCount.value}\n            {...{\n              id: 'site-table',\n              height: '750px'\n            }}\n          >\n            <ElTableColumn prop=\"id\" label=\"应用编号\"></ElTableColumn>\n            <ElTableColumn prop=\"name\" label=\"应用名称\"></ElTableColumn>\n            <ElTableColumn\n              label=\"应用地址\"\n              v-slots={{\n                default: ({ row }: { row: Site }) => {\n                  return row.url === 'none' ? undefined : (\n                    <ElLink href={row.url} {...{ target: '_blank' }}>\n                      {row.url}\n                    </ElLink>\n                  );\n                }\n              }}\n            ></ElTableColumn>\n            <ElTableColumn\n              label=\"操作\"\n              v-slots={{\n                default: ({ row }: { row: Site }) => (\n                  <>\n                    <ElLink\n                      type=\"primary\"\n                      href=\"javascript:void(0);\"\n                      onClick={() => onClickEditApp(row)}\n                    >\n                      编辑\n                    </ElLink>\n                    <ElDivider direction=\"vertical\"></ElDivider>\n                    <ElLink\n                      type=\"primary\"\n                      href=\"javascript:void(0);\"\n                      onClick={() => onClickAccountList(row)}\n                    >\n                      帐号列表\n                    </ElLink>\n                  </>\n                )\n              }}\n            ></ElTableColumn>\n          </OneTable>\n        </LayoutMain>\n        <ElDrawer\n          title=\"应用编辑\"\n          size=\"30%\"\n          {...{\n            modelValue: showEditApp.value,\n            ['onUpdate:modelValue']: (val: boolean) => (showEditApp.value = val)\n          }}\n        >\n          {showEditApp.value ? (\n            <SiteEdit\n              level={level.value}\n              id={selectedSiteId.value}\n              onConfirm={onDrawConfirm}\n              onCancel={() => (showEditApp.value = false)}\n            />\n          ) : undefined}\n        </ElDrawer>\n      </>\n    );\n  }\n});\n"],"names":["setup","showEditApp","currentPageIndex","totalCount","fetchSiteList","level","ElMessage","close","id","height","row","onClickEditApp","_createVNode","modelValue","onDrawConfirm"],"mappings":"ySAWEA,sCAIQC,OAEA,2BAIJC,QACAC,WACAC,oGAWAC,kBADF,6CAUED,aAEIE,+CAIkBC,sIAoBtB,gBAGF,uQAuBUC,yBACAC,+FAIkB,WAAa,oKAIpB,SACAC,+DAAP,uFAWO,UAGE,YAEUC,QAAcC,gKAQI,mJAc3CC,qHAQaC,GAJd,oCAtEP"}