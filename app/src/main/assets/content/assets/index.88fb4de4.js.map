{"version":3,"file":"index.88fb4de4.js","sources":["../../src/utils/upload.ts","../../src/api/restore.ts","../../src/pages/restore/index.tsx"],"sourcesContent":["import { getType, VariableType } from 'roy-type-assert';\n\nexport function upload(url: string, file: File) {\n  return new Promise<void>((resolve, reject) => {\n    const xmlhttp = new XMLHttpRequest();\n    xmlhttp.open('post', url, true);\n    xmlhttp.onload = (e) => {\n      console.log('load');\n      if (xmlhttp.readyState === 4) {\n        if (xmlhttp.status === 200) {\n          let resp = null;\n          if (getType(xmlhttp.response) === VariableType.bUndefined) {\n            resp = xmlhttp.responseText;\n          } else {\n            resp = xmlhttp.response;\n          }\n          const data = JSON.parse(resp, dateReviver);\n          if (data.isSuccess) {\n            resolve();\n          } else {\n            console.log('business error');\n            reject();\n          }\n        } else {\n          console.log('failed');\n          reject();\n        }\n      }\n    };\n    xmlhttp.onerror = (e) => {\n      console.log('error');\n      reject();\n    };\n    xmlhttp.onabort = (e) => {\n      console.log('abort');\n      reject();\n    };\n    xmlhttp.ontimeout = (e) => {\n      console.log('timeout');\n      reject();\n    };\n    const formData = new FormData();\n    formData.append('backup', file);\n    xmlhttp.send(formData);\n  });\n}\n\nfunction dateReviver(key: string, value: any) {\n  let a;\n  if (typeof value === 'string') {\n    a = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)/.exec(\n      value\n    );\n    if (a) {\n      const utc = new Date(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]);\n      const offset = new Date().getTimezoneOffset();\n      const localMinute = utc.getMinutes() - offset;\n      utc.setMinutes(localMinute);\n      return utc;\n    }\n  }\n  return value;\n}\n","import { ApiError, API_ERROR_CODE } from '@/core/exception';\nimport { upload } from '@/utils/upload';\nimport { BaseResponse } from './base';\n\n//#region restore\nexport interface RestoreRequest {\n  file: File;\n}\n\nexport type RestoreResponse = BaseResponse;\n\nexport async function restore(\n  params: RestoreRequest\n): Promise<RestoreResponse> {\n  try {\n    await upload('/restore', params.file);\n    return {\n      isSuccess: true,\n      data: undefined\n    };\n  } catch {\n    throw ApiError.createBuiltInApiError(API_ERROR_CODE.RESTORE_ERROR);\n  }\n}\n//#endregion\n","import { defineComponent, ref } from 'vue';\nimport LayoutMain from '@/components/layoutMain';\nimport { ElMessage, ElNotification, ElUpload } from 'element-plus';\nimport { restore } from '@/api';\n\nexport default defineComponent({\n  name: 'Restore',\n  setup() {\n    const refUpload = ref<typeof ElUpload | null>(null);\n\n    function onClickRestore() {\n      if (refUpload.value) {\n        refUpload.value.submit();\n      }\n    }\n\n    function onUploadRequest({ file }: { action: string; file: File }) {\n      restore({\n        file\n      })\n        .then(() => {\n          ElNotification({\n            type: 'success',\n            message: '恢复成功'\n          });\n        })\n        .catch((e) => {\n          ElMessage.error(e.message);\n        });\n    }\n\n    function onClickBackup() {\n      location.assign('/backup');\n    }\n\n    return () => (\n      <LayoutMain>\n        <ElButton type=\"primary\" onClick={onClickBackup}>\n          备份数据文件\n        </ElButton>\n        <ElDivider></ElDivider>\n        <ElUpload\n          ref={refUpload}\n          action=\"/restore\"\n          drag={true}\n          autoUpload={false}\n          showFileList={true}\n          httpRequest={onUploadRequest}\n        >\n          <div class=\"flex flex-col justify-center items-center h-full\">\n            <ElIcon size=\"50\">\n              <ElIconUploadFilled></ElIconUploadFilled>\n            </ElIcon>\n            <p>请将数据文件拖到此处或者选择数据文件</p>\n          </div>\n        </ElUpload>\n        <ElButton type=\"primary\" onClick={onClickRestore}>\n          恢复数据文件\n        </ElButton>\n      </LayoutMain>\n    );\n  }\n});\n"],"names":["refUpload","onClickRestore"],"mappings":"8QAEuB,EAAa,EAAY,OACvC,IAAI,SAAc,CAAC,EAAS,IAAW,MACtC,GAAU,GAAI,kBACZ,KAAK,OAAQ,EAAK,MAClB,OAAS,AAAC,GAAM,YACd,IAAI,QACR,EAAQ,aAAe,KACrB,EAAQ,SAAW,IAAK,IACtB,GAAO,KACP,EAAQ,EAAQ,YAAc,EAAa,aACtC,EAAQ,eAER,EAAQ,SAGb,AADS,KAAK,MAAM,EAAM,GACrB,uBAGC,IAAI,oCAIN,IAAI,iBAKV,QAAU,AAAC,GAAM,SACf,IAAI,gBAGN,QAAU,AAAC,GAAM,SACf,IAAI,gBAGN,UAAY,AAAC,GAAM,SACjB,IAAI,qBAGR,GAAW,GAAI,YACZ,OAAO,SAAU,KAClB,KAAK,KAIjB,WAAqB,EAAa,EAAY,IACxC,MACA,MAAO,IAAU,aACf,6DAA6D,KAC/D,GAEE,GAAG,MACC,GAAM,GAAI,MAAK,CAAC,EAAE,GAAI,CAAC,EAAE,GAAK,EAAG,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IACzD,EAAS,GAAI,QAAO,oBACpB,EAAc,EAAI,aAAe,WACnC,WAAW,GACR,QAGJ,oBCjDP,EAC0B,IACtB,aACI,GAAO,WAAY,EAAO,MACzB,CACL,UAAW,GACX,KAAM,mBAGF,GAAS,sBAAsB,EAAe,gBCbpD,QAAA,uBAGMA,+EAWM,UADQ,uFAUpB,6ZAyBsCC"}